// need to check

class Solution {
    public int maximumSwap(int num) {
        
        int n = num;
        int c = 0;
        
        while(n > 0){
            n = n / 10;
            c++;
        }
        
        int[] nums = new int[c];
        c = 0;
        
        while(num > 0){
            nums[c++] = num / 10;
            num = num / 10;
        }
        
      HashMap<Integer, Integer> map = new HashMap<>();
        int max = 0;
        
        
        for(int i = 0; i < nums.length; i++){
            map.put(nums[i], i);
            if(nums[i] > max) max = nums[i];
        }
        
        for(int i = 0; i < nums.length; i++){
            if(nums[i] != max){
                int x = 0;
                for(int j = nums[i]+1; j <= max; j++){
                    if(map.containsKey(nums[j])){
                         x = map.get(nums[j]);
                    }
                }
                
                if(x != 0){
                int t = nums[x];
                    nums[x] = nums[i];
                    nums[i] = t;
            }
            }
        }
        
        int ans = 0;
        int h = nums.length;
        for(int i = 0; i < nums.length; i--){
            ans += nums[i]*Math.pow(10, h);
            h--;
        }
        
        return ans;
    }
}
